// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Handling JSON null or missing values with go-swagger example app",
    "title": "Blog example app",
    "version": "0.0.1"
  },
  "host": "localhost:3332",
  "basePath": "/",
  "paths": {
    "/blog/{id}": {
      "patch": {
        "description": "Updates blog post",
        "tags": [
          "blog"
        ],
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "description": "Id of the blog post",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlogUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BlogUpdateRequest": {
      "type": "object",
      "title": "Blog update request",
      "required": [
        "title",
        "markdown"
      ],
      "properties": {
        "markdown": {
          "description": "Blog markdown body",
          "type": "string",
          "example": "In JSON there are two ways to represent null values, first is when there is no value for given key and it’s value implicitly set to null, and second is when key is present and it’s value is explicitly set to null."
        },
        "published_at": {
          "description": "Blog timestamp",
          "$ref": "#/definitions/NullableInt"
        },
        "title": {
          "description": "Blog title",
          "type": "string",
          "example": "Handling JSON null or missing values with go-swagger"
        }
      }
    },
    "ErrorResponse": {
      "properties": {
        "message": {
          "type": "string",
          "example": "Internal server error"
        }
      }
    },
    "MessageResponse": {
      "properties": {
        "message": {
          "type": "string",
          "example": "Blog updated"
        }
      }
    },
    "NullableInt": {
      "type": "integer",
      "x-go-type": {
        "import": {
          "package": "github.com/romanyx/nullable"
        },
        "type": "Int"
      },
      "example": 1525360737
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Handling JSON null or missing values with go-swagger example app",
    "title": "Blog example app",
    "version": "0.0.1"
  },
  "host": "localhost:3332",
  "basePath": "/",
  "paths": {
    "/blog/{id}": {
      "patch": {
        "description": "Updates blog post",
        "tags": [
          "blog"
        ],
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "description": "Id of the blog post",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlogUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BlogUpdateRequest": {
      "type": "object",
      "title": "Blog update request",
      "required": [
        "title",
        "markdown"
      ],
      "properties": {
        "markdown": {
          "description": "Blog markdown body",
          "type": "string",
          "example": "In JSON there are two ways to represent null values, first is when there is no value for given key and it’s value implicitly set to null, and second is when key is present and it’s value is explicitly set to null."
        },
        "published_at": {
          "description": "Blog timestamp",
          "$ref": "#/definitions/NullableInt"
        },
        "title": {
          "description": "Blog title",
          "type": "string",
          "example": "Handling JSON null or missing values with go-swagger"
        }
      }
    },
    "ErrorResponse": {
      "properties": {
        "message": {
          "type": "string",
          "example": "Internal server error"
        }
      }
    },
    "MessageResponse": {
      "properties": {
        "message": {
          "type": "string",
          "example": "Blog updated"
        }
      }
    },
    "NullableInt": {
      "type": "integer",
      "x-go-type": {
        "import": {
          "package": "github.com/romanyx/nullable"
        },
        "type": "Int"
      },
      "example": 1525360737
    }
  }
}`))
}
